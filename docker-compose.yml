services:
  django:
    build: .
    container_name: django_app
    # command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=mydb
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    user: "${UID}:${GID}"


  celery:
    build: .
    container_name: celery_worker
    command: celery -A core worker -l info
    volumes:
      - .:/app
    depends_on:
      - django
      - rabbitmq
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=mydb
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    user: "${UID}:${GID}"

  db:
    image: postgres:17-alpine
    container_name: postgres_db
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persist data

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq_broker
    ports:
      - "5672:5672"    # AMQP
      - "15672:15672"  # Management UI

volumes:
  postgres_data:
